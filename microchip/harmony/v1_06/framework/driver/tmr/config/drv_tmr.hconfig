menu "Timer"
    depends on HAVE_TMR

enum TMR_SOURCE_CLOCK
	"TMR_CLOCK_SOURCE_PERIPHERAL_CLOCK"
	|| "TMR_CLOCK_SOURCE_EXTERNAL_INPUT_PIN"
	
enum DRV_TMR_CLK_SOURCES
    "DRV_TMR_CLKSOURCE_INTERNAL"
    || "DRV_TMR_CLKSOURCE_EXTERNAL_SYNCHRONOUS"
    || "DRV_TMR_CLKSOURCE_EXTERNAL_ASYNCHRONOUS"

enum DRV_TMR_SYNC_MODE
    "DRV_TMR_SYNC_MODE_SYNCHRONOUS_INTERNAL"
    || "DRV_TMR_SYNC_MODE_SYNCHRONOUS_INTERNAL_GATED"
    || "DRV_TMR_SYNC_MODE_SYNCHRONOUS_EXTERNAL_WITHOUT_CLKSYNC"
    || "DRV_TMR_SYNC_MODE_SYNCHRONOUS_EXTERNAL_WITH_CLKSYNC"
    || "DRV_TMR_SYNC_MODE_ASYNCHRONOUS_EXTERNAL_WITHOUT_CLKSYNC"
    || "DRV_TMR_SYNC_MODE_ASYNCHRONOUS_EXTERNAL_WITH_CLKSYNC"
    || "DRV_TMR_SYNC_MODE_IDLE"

enum DRV_TMR_ALARM_TYPE
    "DRV_TMR_ALARM_TYPE_ONE_SHOT"
    || "DRV_TMR_ALARM_TYPE_PERIODIC"

enum DRV_TMR_OPERATION_MODE
    "DRV_TMR_OPERATION_MODE_NONE"
    || "DRV_TMR_OPERATION_MODE_16_BIT"
    || "DRV_TMR_OPERATION_MODE_32_BIT"
    
enum DRV_TMR_MODE
    "STATIC"
    || "DYNAMIC"
    
config USE_DRV_TMR_NEEDED
    bool
config USE_TMR_DRIVER_MODE_NEEDED_BY_IC_OC
    bool
config USE_TMR_MODULE_ID_2_NEEDED_BY_IC_OC
    bool
config USE_TMR_MODULE_ID_3_NEEDED_BY_IC_OC
    bool

config USE_DRV_TMR
    depends on HAVE_TMR
    bool "Use Timer Driver?"
    default y if USE_DRV_TMR_NEEDED
    default n
    ---help---
    IDH_HTML_DRV_TMR_Timer_Driver_Library
    ---endhelp---

config DRV_TMR_DRIVER_MODE
    string "Driver Implementation"
    depends on USE_DRV_TMR
    range DRV_TMR_MODE
    default "STATIC" if USE_TMR_DRIVER_MODE_NEEDED_BY_IC_OC
    default "DYNAMIC"
    ---help---
    IDH_HTML_DRV_TMR_Timer_Driver_Library
    ---endhelp---

ifblock  DRV_TMR_DRIVER_MODE = "DYNAMIC"
config DRV_TMR_CLIENTS_NUMBER
    int "Number of Clients"
    depends on USE_DRV_TMR
    default 1
    persistent
endif    

config DRV_TMR_INTERRUPT_MODE
    bool "Interrupt Mode"
    depends on USE_DRV_TMR
    select USE_SYS_INT_NEEDED
    default y
    ---help---
    IDH_HTML_DRV_TMR_INTERRUPT_MODE
    ---endhelp---

config DRV_TMR_INCLUDE_DRIVER
    bool
    depends on USE_DRV_TMR
    depends on DRV_TMR_DRIVER_MODE = "DYNAMIC"
    select DRIVER
    default y

config DRV_TMR_INCLUDE_INTERRUPT_SERVICE
    bool
    depends on USE_DRV_TMR
    depends on DRV_TMR_DRIVER_MODE = "DYNAMIC"
    depends on DRV_TMR_INTERRUPT_MODE
    default y

config DRV_TMR_INSTANCES_NUMBER
    int "Number of Timer Driver Instances"
    depends on USE_DRV_TMR
    range 1 TMR_NUMBER_OF_MODULES
    default 1
    ---help---
    IDH_HTML_DRV_TMR_INSTANCES_NUMBER
    ---endhelp---
    
source "$HARMONY_VERSION_PATH/framework/driver/tmr/config/drv_tmr_idx.ftl" 9 instances

endmenu

enum DRV_TMR_INDEX
    "DRV_TMR_INDEX_0"
    || "DRV_TMR_INDEX_1"
    || "DRV_TMR_INDEX_2"
    || "DRV_TMR_INDEX_3"
    || "DRV_TMR_INDEX_4"
    || "DRV_TMR_INDEX_5"
    || "DRV_TMR_INDEX_6"
    || "DRV_TMR_INDEX_7"
    || "DRV_TMR_INDEX_8"
    || "DRV_TMR_INDEX_9"

ifblock DRV_TMR_DRIVER_MODE = "DYNAMIC"
ifblock USE_DRV_TMR
file DRV_TMR_H "$HARMONY_VERSION_PATH/framework/driver/tmr/drv_tmr.h" to "$PROJECT_HEADER_FILES/framework/driver/tmr/drv_tmr.h"
file DRV_TMR_C "$HARMONY_VERSION_PATH/framework/driver/tmr/src/dynamic/drv_tmr.c" to "$PROJECT_SOURCE_FILES/framework/driver/tmr/src/dynamic/drv_tmr.c"
endif
endif
ifblock DRV_TMR_DRIVER_MODE = "STATIC"
ifblock USE_DRV_TMR
template TMR_DRV_STATIC_H "$HARMONY_VERSION_PATH/framework/driver/tmr/templates/drv_tmr_static.h.ftl" to "$PROJECT_HEADER_FILES/app/system_config/$CONFIGURATION/framework/driver/tmr/drv_tmr_static.h"
template TMR_DRV_STATIC_C "$HARMONY_VERSION_PATH/framework/driver/tmr/templates/drv_tmr_static.c.ftl" to "$PROJECT_SOURCE_FILES/app/system_config/$CONFIGURATION/framework/driver/tmr/src/drv_tmr_static.c"
endif
endif
