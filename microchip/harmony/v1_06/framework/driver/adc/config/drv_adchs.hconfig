config DRV_ADCHS_ID
    string
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    range ADC_MODULE_ID
    default "ADCHS_ID_0"	
	
config DRV_ADCHS_DRIVER_MODE
    string "Driver Implementation"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    range DRV_ADC_MODE_ENUM
    default "STATIC"
	persistent
    ---help---
    IDH_HTML_ADC_Driver_Library
    ---endhelp---

config DRV_ADCHS_INCLUDE_DRIVER
    bool
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    depends on DRV_ADCHS_DRIVER_MODE = "DYNAMIC"
    select DRIVER
    default y

choice

    prompt "Mode Options"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    default DRV_ADCHS_POLLED_MODE	
	
config DRV_ADCHS_INTERRUPT_MODE
    bool "Interrupt Mode"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	select USE_SYS_INT_NEEDED
    ---help---
    IDH_HTML_DRV_ADC_INTERRUPT_MODE
    ---endhelp---
	
config DRV_ADCHS_POLLED_MODE
    bool "Polled Mode"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    ---help---
    Sets ADC Static Driver to Polled Mode 
    ---endhelp---

endchoice	

config DRV_ADCHS_EARLY_INTERRUPT_SELECTION
    bool "Enable Early Interrupt"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS && DRV_ADCHS_INTERRUPT_MODE
    ---help---
    IDH_HTML_DRV_ADCHS_EARLY_INTERRUPT_SELECTION
    ---endhelp---

config DRV_ADCHS_INTERRUPT_SOURCE
    string "Interrupt Source"
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
	range INT_SOURCE
    default "INT_SOURCE_ADC_1"
    ---help---
      IDH_HTML_INT_SOURCE
    ---endhelp---
    
config DRV_ADCHS_INTERRUPT_VECTOR
    string "Interrupt vector"
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
	range INT_VECTOR
    default "INT_VECTOR_ADC1"
    ---help---
      IDH_HTML_INT_VECTOR
    ---endhelp---
    
config DRV_ADCHS_INTERRUPT_PRIORITY
    string "Interrupt Priority"
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
    range INT_PRIORITY_LEVEL
    default "INT_PRIORITY_LEVEL3"
    ---help---
      IDH_HTML_INT_PRIORITY_LEVEL
    ---endhelp---
    
config DRV_ADCHS_INTERRUPT_SUB_PRIORITY
    string "Interrupt Sub-priority"
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
    range INT_SUBPRIORITY_LEVEL
    default "INT_SUBPRIORITY_LEVEL0"
    ---help---
      IDH_HTML_INT_SUBPRIORITY_LEVEL
    ---endhelp---
   
config DRV_ADCHS_INT_PRIO_NUM
    string
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
    default "INT_DISABLE_INTERRUPT" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_DISABLE_INTERRUPT"
    default "INT_PRIORITY_LEVEL1" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL1"
    default "INT_PRIORITY_LEVEL2" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL2"
    default "INT_PRIORITY_LEVEL3" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL3"
    default "INT_PRIORITY_LEVEL4" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL4"
    default "INT_PRIORITY_LEVEL5" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL5"
    default "INT_PRIORITY_LEVEL6" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL6"
    default "INT_PRIORITY_LEVEL7" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL7"    

config DRV_ADCHS_INT_IPL
    string
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
    default "0" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_DISABLE_INTERRUPT"
    default "1" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL1"
    default "2" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL2"
    default "3" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL3"
    default "4" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL4"
    default "5" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL5"
    default "6" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL6"
    default "7" if DRV_ADCHS_INTERRUPT_PRIORITY = "INT_PRIORITY_LEVEL7"
 
config DRV_ADCHS_ISR_VECTOR
    string
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
    default "_ADC_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1")
	default "_ADC_DC1_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DC1")
	default "_ADC_DC2_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DC2")
	default "_ADC_DC3_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DC3")
	default "_ADC_DC4_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DC4")
	default "_ADC_DC5_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DC5")
	default "_ADC_DC6_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DC6")
	default "_ADC_DF1_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DF1")
	default "_ADC_DF2_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DF2")
	default "_ADC_DF3_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DF3")
	default "_ADC_DF4_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DF4")
	default "_ADC_DF5_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DF5")
	default "_ADC_DF6_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DF6")
	default "_ADC_FAULT_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC_FAULT")
	default "_ADC_DATA0_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA0")
	default "_ADC_DATA1_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA1")
	default "_ADC_DATA2_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA2")
	default "_ADC_DATA3_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA3")
	default "_ADC_DATA4_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA4")
	default "_ADC_DATA5_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA5")
	default "_ADC_DATA6_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA6")
	default "_ADC_DATA7_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA7")
	default "_ADC_DATA8_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA8")
	default "_ADC_DATA9_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA9")
	default "_ADC_DATA10_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA10")
	default "_ADC_DATA11_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA11")
	default "_ADC_DATA12_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA12")
	default "_ADC_DATA13_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA13")
	default "_ADC_DATA14_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA14")
	default "_ADC_DATA15_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA15")
	default "_ADC_DATA16_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA16")
	default "_ADC_DATA17_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA17")
	default "_ADC_DATA18_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA18")
	default "_ADC_DATA19_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA19")
	default "_ADC_DATA20_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA20")
	default "_ADC_DATA21_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA21")
	default "_ADC_DATA22_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA22")
	default "_ADC_DATA23_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA23")
	default "_ADC_DATA24_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA24")
	default "_ADC_DATA25_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA25")
	default "_ADC_DATA26_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA26")
	default "_ADC_DATA27_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA27")
	default "_ADC_DATA28_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA28")
	default "_ADC_DATA29_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA29")
	default "_ADC_DATA30_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA30")
	default "_ADC_DATA31_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA31")
	default "_ADC_DATA32_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA32")
	default "_ADC_DATA33_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA33")
	default "_ADC_DATA34_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA34")
	default "_ADC_DATA35_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA35")
	default "_ADC_DATA36_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA36")
	default "_ADC_DATA37_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA37")
	default "_ADC_DATA38_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA38")
	default "_ADC_DATA39_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA39")
	default "_ADC_DATA40_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA40")
	default "_ADC_DATA41_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA41")
	default "_ADC_DATA42_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA42")
	default "_ADC_DATA43_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA43")
	default "_ADC_DATA44_VECTOR" if (DRV_ADCHS_INTERRUPT_VECTOR = "INT_VECTOR_ADC1_DATA44")

menu "Global Setup"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS

config DRV_ADCHS_INTERRUPT_BIT_SHIFT_LEFT
    string "Interrupt vector left shift"
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
	depends on DRV_ADC_TYPE_ADCHS
	range ADCHS_INTERRUPT_BIT_SHIFT_LEFT
    default "ADCHS_INTERRUPT_BIT_SHIFT_LEFT_0_BITS"
	---help---
	IDH_HTML_ADCHS_INTERRUPT_BIT_SHIFT_LEFT
	---endhelp---

config DRV_ADCHS_INTERRUPT_VECTOR_BASE
    hex "Vector Base"
    depends on USE_DRV_ADC && DRV_ADCHS_INTERRUPT_MODE
	depends on DRV_ADC_TYPE_ADCHS
	default 0x0000
	---help---
	IDH_HTML_ADCHS_INTERRUPT_VECTOR_BASE
	---endhelp---

config DRV_ADCHS_CHARGEPUMP_MODE
    string "Charge pump enable"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	range ADCHS_CHARGEPUMP_MODE
    default "ADCHS_CHARGEPUMP_DISABLE"
	---help---
	IDH_HTML_ADCHS_CHARGEPUMP
	---endhelp---

config DRV_ADCHS_FAST_SYNC_SYSTEM_CLOCK
    string "Fast Synchronous system clock"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	range ADCHS_FAST_SYNC_SYSTEM_CLOCK
    default "ADCHS_FAST_SYNC_SYSTEM_CLOCK_DISABLE"
	---help---
	IDH_HTML_ADCHS_FAST_SYNC_SYSTEM_CLOCK
	---endhelp---

config DRV_ADCHS_FAST_SYNC_PERIPHERAL_CLOCK
    string "Fast Synchronous peripheral clock"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	range ADCHS_FAST_SYNC_PERIPHERAL_CLOCK
    default "ADCHS_FAST_SYNC_PERIPHERAL_CLOCK_DISABLE"
	---help---
	IDH_HTML_ADCHS_FAST_SYNC_PERIPHERAL_CLOCK
	---endhelp---

config DRV_ADCHS_OUTPUT_DATA_FORMAT
    string "Output data format"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	range ADCHS_OUTPUT_DATA_FORMAT
    default "ADCHS_OUTPUT_DATA_FORMAT_INTEGER"
	---help---
	IDH_HTML_ADCHS_OUTPUT_DATA_FORMAT
	---endhelp---

config DRV_ADC_VOLTAGE_REFERENCE_ADCHS
    string "Select Voltage Reference"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    range ADCHS_VREF_SOURCE
    default "ADCHS_VREF_AVDD_AVSS"
	---help---
	IDH_HTML_ADCHS_VOLTAGE_REFERENCE
	---endhelp---

config DRV_ADCHS_CLOCK_SOURCE
    string "Select Clock Source for ADC (TCLK) "
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    range ADCHS_CLOCK_SOURCE
    default "ADCHS_CLOCK_SOURCE_PBCLK"
	---help---
	IDH_HTML_ADCHS_CLOCK_SOURCE
	---endhelp---

config DRV_ADCHS_CLOCK_DIVIDER
    int "Clock Divider (nTQ) "
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	range 0 63
    default 0
	---help---
	IDH_HTML_ADCHS_CLOCK_DIVIDER
	---endhelp---

config DRV_ADCHS_WARMUP_CLOCK
    string "Warmup Clock count"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
	range ADCHS_WARMUP_CLOCK
    default "ADCHS_WARMUP_CLOCK_32768"
	---help---
	IDH_HTML_ADCHS_WARMUP_CLOCK
	---endhelp---

endmenu

menu "Channel Setup"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS

config DRV_ADCHS_CHANNEL_NUMBER
    int "Number of ADC Channel (Dedicated and Shared) Instances"
    depends on USE_DRV_ADC
    range 1 NUM_ADCHS_CHANNEL_ID
    default 1
    ---help---
    IDH_HTML_DRV_ADCHS_CHANNEL_NUMBER
    ---endhelp---

source "$HARMONY_VERSION_PATH/framework/driver/adc/config/drv_adchs_channel_idx.ftl" 6 instances

endmenu

menu "Other Options"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS

config DRV_ADCHS_POWER_STATE
    string "Power State"
    depends on USE_DRV_ADC
	depends on DRV_ADC_TYPE_ADCHS
    range SYS_MODULE_POWER_STATE
    default "SYS_MODULE_POWER_RUN_FULL"
    ---help---
    IDH_HTML_SYS_MODULE_INIT
    ---endhelp---

endmenu
