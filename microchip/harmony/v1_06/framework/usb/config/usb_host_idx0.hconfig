ifblock USB_BETA_SW_HOST_INSTANCE_0

config USB_BETA_SW_HOST_SPEED_HS_IDX0
        string "Host Speed"
    depends on USE_USB_STACK
        depends on DRV_USB_BETA_SW_HOST_SUPPORT && PIC32MZ
		range USB_DEVICE_SPEED_HS
        default "USB_SPEED_HIGH"
        ---help---
        Specify the speed at which this device will attempt to connect to the
        host. PIC32MX devices support Full Speed only. PIC32MZ Host support Full
        Speed and High Speed. Selecting High Speed will allow the device to work at both
        Full Speed and High Speed.
        ---endhelp---
		

	
config USB_BETA_SW_HOST_TPL_ENTRIES
    int "Host TPL entries "
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default 1
    ---help---
    Enter the number of entries in the TPL table for this USB Host Stack
    instance. This number is greater than 1 if more than 1 device type is to be
    supported.
    ---endhelp---
	
config USB_BETA_SW_HOST_MAX_DEVICES_NUMBER
    int "Host Max devices  "
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default 1	
    ---help---
    Enter the maximum number of devices that should be managed by this instance
    of the USB Host stack. Note that support for multiple device requires Hub
    support. The Hub should also be counted as an attached device.
    ---endhelp---
	
config USB_BETA_SW_HOST_MAX_CONFIGURATION
    int "Host Max Configuration per Device  "
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default 1
    ---help---
    Enter the maximum number of configurations to be supported per device
    ---endhelp---
	
config USB_BETA_SW_HOST_MAX_INTERFACES
    int "Host Max Interface per Device "
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default 1
    ---help---
    Enter the maximum number of interfaces to be supported per device
    ---endhelp---

config USB_BETA_SW_HOST_MAX_DRIVER_SUPPORTED
    int "Host Max drivers  "
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default 1
    ---help---
    Specify the maximum number of class drivers in the application
    ---endhelp---
	
config USB_BETA_SW_HOST_CLIENTS_NUMBER
    int "Number of Host clients"
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default 1 
    ---help---
    Specify the total number of USB Host stack clients in the application.
    ---endhelp---

			
config USB_BETA_SW_HOST_TPL_TABLE_IDX0
    string "Pointer to TPL list"
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default "USBTPList"
    ---help---
    Specify the pointer to the TPL table.
    ---endhelp---
    
 config USB_BETA_SW_HOST_SLEEP_IN_IDLE_IDX0
    bool "Stop in Idle"
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default n
    ---help---
    Select this to stop the USB module when the CPU enters IDLE mode.
    ---endhelp---

config DRV_USB_BETA_SW_HOST_SUSPEND_IN_SLEEP_IDX0
    bool "USB suspend in sleep"
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    default n
    ---help---
    Select this to suspend the USB module when the PIC32 enter sleep mode.
    ---endhelp---  	

config USB_BETA_SW_HOST_HOST_POWER_STATE_IDX0
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
    string "Power State"
    range SYS_MODULE_POWER_STATE
    default "SYS_MODULE_POWER_RUN_FULL"
    ---help---
    Select the system power state for the USB Host Layer.
    ---endhelp---

config DRV_USB_BETA_SW_HOST_MODULE_ID_IDX0
    string 
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT
	default "USB_ID_1" if PIC32MX
	default "USBHS_ID_0" if PIC32MZ
    ---help---
    Specify the USB Peripheral to be used with this instance of the USB Host Stack.
    ---endhelp---

config DRV_USB_BETA_SW_HOST_INTERRUPT_SOURCE_IDX0
    string 
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE
    range INT_SOURCE
    default "INT_SOURCE_USB_1"
    ---help---
    Specify the USB Interrupt Source for this USB peripheral.
    ---endhelp---

config DRV_USB_BETA_SW_HOST_INTERRUPT_VECTOR_IDX0
    string
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE
	range INT_VECTOR
	default "INT_VECTOR_USB1"
    ---help---
    Specify the Interrupt Vector for this USB peripheral.
    ---endhelp---

config DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0
    string "USB Interrupt priority"
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE
    range INT_PRIORITY_LEVEL
    default "INT_PRIORITY_LEVEL4"
    ---help---
    IDH_HTML_INT_PRIORITY_LEVEL
    ---endhelp---

config DRV_USB_BETA_SW_HOST_INTERRUPT_SUB_PRIORITY_IDX0
    string "USB Interrupt sub priority"
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE
    range INT_SUBPRIORITY_LEVEL
    default "INT_SUBPRIORITY_LEVEL0"
    ---help---
    IDH_HTML_INT_SUBPRIORITY_LEVEL
    ---endhelp---

config DRV_USB_BETA_SW_HOST_INT_PRIO_NUM_IDX0
    string
    depends on USE_USB_STACK

    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE
    default "0" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL0"
    default "1" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL1"
    default "2" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL2"
    default "3" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL3"
    default "4" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL4"
    default "5" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL5"
    default "6" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL6"
    default "7" if DRV_USB_BETA_SW_HOST_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL7"


config DRV_USB_BETA_SW_HOST_ISR_VECTOR_IDX0
    string
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE
    default "_USB_1_VECTOR" if PIC32MX
    default "_USB_VECTOR"   if PIC32MZ
	
	
	config DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_SOURCE_IDX0
        string
    depends on USE_USB_STACK
        depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE && PIC32MZ
        range INT_SOURCE
        default "INT_SOURCE_USB_1_DMA"
        ---help---
        Interrupt source for this USB DMA Peripheral
        ---endhelp---


    config DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_VECTOR_IDX0
        string
    depends on USE_USB_STACK
        depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE && PIC32MZ
        range INT_VECTOR
        default "INT_VECTOR_USB1_DMA"
        ---help---
        Interrupt vector for this USB DMA Peripheral
        ---endhelp---


    config DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0
        string "USB DMA Interrupt Priority" if PIC32MZ
    depends on USE_USB_STACK
        depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE && PIC32MZ
        range INT_PRIORITY_LEVEL
        default "INT_PRIORITY_LEVEL4"
        ---help---
        IDH_HTML_INT_SUBPRIORITY_LEVEL
        ---endhelp---

    config DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_SUB_PRIORITY_IDX0
        string "USB DMA Interrupt Sub-priority" if PIC32MZ
    depends on USE_USB_STACK
        depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE && PIC32MZ
        range INT_SUBPRIORITY_LEVEL
        default "INT_SUBPRIORITY_LEVEL0"
        ---help---
        Select the USB DMA Vector Subpriority
        ---endhelp---

    config DRV_USB_BETA_SW_HOST_DMA_INT_PRIO_NUM_IDX0
        string
    depends on USE_USB_STACK

        depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE && PIC32MZ
        default "0" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL0"
        default "1" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL1"
        default "2" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL2"
        default "3" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL3"
        default "4" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL4"
        default "5" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL5"
        default "6" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL6"
        default "7" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL7"


    config DRV_USB_BETA_SW_HOST_DMA_ISR_VECTOR_IDX0
    string
    depends on USE_USB_STACK
    depends on DRV_USB_BETA_SW_HOST_SUPPORT && DRV_USB_INTERRUPT_MODE && PIC32MZ
    default "_USB_DMA_VECTOR" if DRV_USB_BETA_SW_HOST_DMA_INTERRUPT_VECTOR_IDX0 = "INT_VECTOR_USB1_DMA"	
enum USB_BETA_SW_HOST_DRIVER
     "USB_BETA_SW_HOST_MSD"
     ||"USB_BETA_SW_HOST_CDC"
	 ||"USB_BETA_SW_HOST_HID"
    

endif
